name: CI

on: [ push, pull_request ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-18.04

    continue-on-error: ${{ matrix.env.experimental == true }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - { php: 7.4, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^6.5.0 }
          - { php: 7.3, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^6.5.0 }
          - { php: 7.4, TYPO3_VERSION: ^11.0, TESTING_FRAMEWORK: ^6.6 }
          - { php: 8.0, TYPO3_VERSION: ^11.0, TESTING_FRAMEWORK: ^6.6 }
          - { php: 7.4, TYPO3_VERSION: dev-master, TESTING_FRAMEWORK: ^6.6 }

    env: ${{ matrix.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.env.php }}
          tools: composer
          extensions: pdo, sqlite3

      # composer
      - name: Update Composer
        run: |
          sudo composer self-update
          composer --version
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Ensure stability dev
        if: ${{ matrix.env.TYPO3_VERSION == 'dev-master' }}
        run: |
          composer config minimum-stability dev
          composer config prefer-stable true
      - name: Install TYPO3 core
        run: composer require typo3/cms-core="${TYPO3_VERSION}" ${PREFER_LOWEST};

      - name: Install testing framework ${{ matrix.env.TESTING_FRAMEWORK }}
        if: ${{ matrix.env.TESTING_FRAMEWORK }}
        run: composer require --dev typo3/testing-framework="${TESTING_FRAMEWORK}";
        # unit tests
      - name: Unit Tests
        run: |
          echo "Running ${TYPO3_VERSION} unit tests with $(which php)";
          .Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/;

        # start db
      - name: Start MySQL
        run: sudo /etc/init.d/mysql start

      # functional tests
      - name: Functional Tests
        run: |
          export typo3DatabaseName="typo3";
          export typo3DatabaseHost="127.0.0.1";
          export typo3DatabaseUsername="root";
          export typo3DatabasePassword="root";
          .Build/bin/phpunit --colors -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml Tests/Functional

      - name: Reset composer.json
        run: git checkout composer.json;
